/* BASICS */

.CodeMirror {
  /* Set height, width, borders, and global font properties here */
  font-family: monospace;
  height: 300px;
}
.CodeMirror-scroll {
  /* Set scrolling behaviour here */
  overflow: auto;
}

/* PADDING */

.CodeMirror-lines {
  padding: 4px 0; /* Vertical padding around content */
}
.CodeMirror pre {
  padding: 0 4px; /* Horizontal padding of content */
}

.CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  background-color: white; /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
  border-right: 1px solid #ddd;
  background-color: #f7f7f7;
  white-space: nowrap;
}
.CodeMirror-linenumbers {}
.CodeMirror-linenumber {
  padding: 0 3px 0 5px;
  min-width: 20px;
  text-align: right;
  color: #999;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

.CodeMirror-guttermarker { color: black; }
.CodeMirror-guttermarker-subtle { color: #999; }

/* CURSOR */

.CodeMirror div.CodeMirror-cursor {
  border-left: 1px solid black;
}
/* Shown when moving in bi-directional text */
.CodeMirror div.CodeMirror-secondarycursor {
  border-left: 1px solid silver;
}
.CodeMirror.cm-keymap-fat-cursor div.CodeMirror-cursor {
  width: auto;
  border: 0;
  background: #7e7;
}
.cm-animate-fat-cursor {
  width: auto;
  border: 0;
  -webkit-animation: blink 1.06s steps(1) infinite;
  -moz-animation: blink 1.06s steps(1) infinite;
  animation: blink 1.06s steps(1) infinite;
}
@-moz-keyframes blink {
  0% { background: #7e7; }
  50% { background: none; }
  100% { background: #7e7; }
}
@-webkit-keyframes blink {
  0% { background: #7e7; }
  50% { background: none; }
  100% { background: #7e7; }
}
@keyframes blink {
  0% { background: #7e7; }
  50% { background: none; }
  100% { background: #7e7; }
}

/* Can style cursor different in overwrite (non-insert) mode */
div.CodeMirror-overwrite div.CodeMirror-cursor {}

.cm-tab { display: inline-block; }

.CodeMirror-ruler {
  border-left: 1px solid #ccc;
  position: absolute;
}

/* DEFAULT THEME */

.cm-s-default .cm-keyword {color: #708;}
.cm-s-default .cm-atom {color: #219;}
.cm-s-default .cm-number {color: #164;}
.cm-s-default .cm-def {color: #00f;}
.cm-s-default .cm-variable,
.cm-s-default .cm-punctuation,
.cm-s-default .cm-property,
.cm-s-default .cm-operator {}
.cm-s-default .cm-variable-2 {color: #05a;}
.cm-s-default .cm-variable-3 {color: #085;}
.cm-s-default .cm-comment {color: #a50;}
.cm-s-default .cm-string {color: #a11;}
.cm-s-default .cm-string-2 {color: #f50;}
.cm-s-default .cm-meta {color: #555;}
.cm-s-default .cm-qualifier {color: #555;}
.cm-s-default .cm-builtin {color: #30a;}
.cm-s-default .cm-bracket {color: #997;}
.cm-s-default .cm-tag {color: #170;}
.cm-s-default .cm-attribute {color: #00c;}
.cm-s-default .cm-header {color: blue;}
.cm-s-default .cm-quote {color: #090;}
.cm-s-default .cm-hr {color: #999;}
.cm-s-default .cm-link {color: #00c;}

.cm-negative {color: #d44;}
.cm-positive {color: #292;}
.cm-header, .cm-strong {font-weight: bold;}
.cm-em {font-style: italic;}
.cm-link {text-decoration: underline;}

.cm-s-default .cm-error {color: #f00;}
.cm-invalidchar {color: #f00;}

/* Default styles for common addons */

div.CodeMirror span.CodeMirror-matchingbracket {color: #0f0;}
div.CodeMirror span.CodeMirror-nonmatchingbracket {color: #f22;}
.CodeMirror-matchingtag { background: rgba(255, 150, 0, .3); }
.CodeMirror-activeline-background {background: #e8f2ff;}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
   the editor. You probably shouldn't touch them. */

.CodeMirror {
  line-height: 1;
  position: relative;
  overflow: hidden;
  background: white;
  color: black;
}

.CodeMirror-scroll {
  /* 30px is the magic margin used to hide the element's real scrollbars */
  /* See overflow: hidden in .CodeMirror */
  margin-bottom: -30px; margin-right: -30px;
  padding-bottom: 30px;
  height: 100%;
  outline: none; /* Prevent dragging from highlighting the element */
  position: relative;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}
.CodeMirror-sizer {
  position: relative;
  border-right: 30px solid transparent;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
   before actuall scrolling happens, thus preventing shaking and
   flickering artifacts. */
.CodeMirror-vscrollbar, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-gutter-filler {
  position: absolute;
  z-index: 6;
  display: none;
}
.CodeMirror-vscrollbar {
  right: 0; top: 0;
  overflow-x: hidden;
  overflow-y: scroll;
}
.CodeMirror-hscrollbar {
  bottom: 0; left: 0;
  overflow-y: hidden;
  overflow-x: scroll;
}
.CodeMirror-scrollbar-filler {
  right: 0; bottom: 0;
}
.CodeMirror-gutter-filler {
  left: 0; bottom: 0;
}

.CodeMirror-gutters {
  position: absolute; left: 0; top: 0;
  padding-bottom: 30px;
  z-index: 3;
}
.CodeMirror-gutter {
  white-space: normal;
  height: 100%;
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  padding-bottom: 30px;
  margin-bottom: -32px;
  display: inline-block;
  /* Hack to make IE7 behave */
  *zoom:1;
  *display:inline;
}
.CodeMirror-gutter-elt {
  position: absolute;
  cursor: default;
  z-index: 4;
}

.CodeMirror-lines {
  cursor: text;
}
.CodeMirror pre {
  /* Reset some styles that the rest of the page might have set */
  -moz-border-radius: 0; -webkit-border-radius: 0; border-radius: 0;
  border-width: 0;
  background: transparent;
  font-family: inherit;
  font-size: inherit;
  margin: 0;
  white-space: pre;
  word-wrap: normal;
  line-height: inherit;
  color: inherit;
  z-index: 2;
  position: relative;
  overflow: visible;
}
.CodeMirror-wrap pre {
  word-wrap: break-word;
  white-space: pre-wrap;
  word-break: normal;
}

.CodeMirror-linebackground {
  position: absolute;
  left: 0; right: 0; top: 0; bottom: 0;
  z-index: 0;
}

.CodeMirror-linewidget {
  position: relative;
  z-index: 2;
  overflow: auto;
}

.CodeMirror-widget {}

.CodeMirror-wrap .CodeMirror-scroll {
  overflow-x: hidden;
}

.CodeMirror-measure {
  position: absolute;
  width: 100%;
  height: 0;
  overflow: hidden;
  visibility: hidden;
}
.CodeMirror-measure pre { position: static; }

.CodeMirror div.CodeMirror-cursor {
  position: absolute;
  border-right: none;
  width: 0;
}

div.CodeMirror-cursors {
  visibility: hidden;
  position: relative;
  z-index: 1;
}
.CodeMirror-focused div.CodeMirror-cursors {
  visibility: visible;
}

.CodeMirror-selected { background: #d9d9d9; }
.CodeMirror-focused .CodeMirror-selected { background: #d7d4f0; }
.CodeMirror-crosshair { cursor: crosshair; }

.cm-searching {
  background: #ffa;
  background: rgba(255, 255, 0, .4);
}

/* IE7 hack to prevent it from returning funny offsetTops on the spans */
.CodeMirror span { *vertical-align: text-bottom; }

/* Used to force a border model for a node */
.cm-force-border { padding-right: .1px; }

@media print {
  /* Hide the cursor when printing */
  .CodeMirror div.CodeMirror-cursors {
    visibility: hidden;
  }
}

mtk-text-editor {
  display: block;
}
mtk-text-editor > ol {
  list-style: none;
  padding: 0 0 0.5em 0;
}
mtk-text-editor > ol > li {
  margin-bottom: 0.5em;
  border: 1px solid #000000;
  background: #cccccc;
}
mtk-text-editor .CodeMirror {
  height: 400px;
}
mtk-text-editor label select {
  display: block;
  width: 100%;
  overflow-x: auto;
}
html {
  font-family: monospace;
  background-color: #cccccc;
  overflow-y: hidden;
  height: 100%;
}
body {
  margin: 0;
  padding: 0;
}
.compatibility-info {
  background: orange;
  color: white;
  border: .5em solid red;
  padding: 1em;
}
.compatibility-info pre {
  background: black;
  padding: .5em;
}
body.dependencies-ready .compatibility-info {
  display: none;
}
red-pill {
  display: none;
}
body.dependencies-ready {
  height: 100%;
}
red-pill label {
  display: block;
}
red-pill label select {
  vertical-align: top;
}
red-pill {
  color: black;
  background: white;
}
mtk-red-pill-glyphs {
  display: block;
  width: 100%;
}
.hasEditor mtk-red-pill-glyphs {
  width: calc(100% - 450px);
}
mtk-red-pill-glyphs label {
  display: inline;
  vertical-align: bottom;
}
mtk-red-pill-glyphs label:first-child {
  margin-left: 0.5em;
}
mtk-red-pill-glyphs > label > * {
  vertical-align: middle;
}
mtk-red-pill-glyph {
  display: block;
  overflow: visible;
  height: 100%;
  position: relative;
}
mtk-red-pill-glyph span.particulars {
  position: absolute;
  display: inline-block;
  white-space: nowrap;
  top: 0
        left: 0;
  width: 0;
  overflow: hidden;
  background: #ffffe0;
}
mtk-red-pill-glyph svg {
  outline: 1px solid rgba(0, 0, 0, 0.1);
  height: 100%;
}
mtk-red-pill-glyph svg use.layer-centerline {
  fill: none;
  stroke: lime;
  stroke-width: 1;
}
mtk-red-pill-glyph svg use.layer-base {
  fill: rgba(0, 0, 0, 0.5);
  paint-order: stroke;
  stroke: Wheat;
  stroke-width: 2;
}
mtk-red-pill-glyph svg use.layer-meta {
  fill: rgba(255, 0, 0, 0.6);
  paint-order: stroke;
  stroke: blue;
  stroke-width: 0.5;
}
mtk-red-pill-glyph svg g.layer-shapes {
  fill: rgba(0, 0, 0, 0.5);
}
mtk-red-pill-glyph svg g.layer-shapes use.type-contour,
mtk-red-pill-glyph svg g.layer-shapes use.type-penstroke {
  marker-start: url('/markers.svg#direction-indicator');
}
mtk-red-pill-glyph svg g.layer-shapes use {
  cursor: pointer;
}
mtk-red-pill-glyph svg g.layer-shapes use:hover {
  fill: rgba(0, 30, 0, 0.45);
  paint-order: stroke;
}
mtk-red-pill-glyph svg g.layer-pointlike {
  fill: rgba(255, 20, 20, 0.6);
  paint-order: stroke;
  stroke: red;
  stroke-width: 1px;
  cursor: pointer;
}
mtk-red-pill-glyph svg g.layer-pointlike > *:hover {
  fill: rgba(100, 0, 0, 0.6);
  stroke: orange;
  stroke-width: 3px;
}
mtk-red-pill-glyph svg g.component {
  fill: #333;
  opacity: 0.9;
  stroke: none;
}
mtk-red-pill-glyph:hover span.particulars {
  width: auto;
  z-index: 100;
  /* this must hide again when the mouse is over it
      , otherwise elements beneath are not reachable
    */
}
mtk-red-pill-glyph:hover span.particulars :hover {
  display: none;
}
mtk-red-pill-glyphs ol {
  white-space: normal;
  padding: 0;
}
mtk-red-pill-glyphs li {
  display: inline-block;
  vertical-align: top;
}
red-pill {
  height: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}
red-pill > * {
  flex-grow: 1;
  flex-shrink: 1;
  overflow: auto;
}
red-pill mtk-text-editor {
  width: 450px;
}
red-pill mtk-red-pill-glyphs,
red-pill mtk-text-editor {
  display: inline-block;
  vertical-align: top;
}
mtk-cps-panel {
  max-height: 100%;
  height: 50%;
  /* todo: this should have a drag handle control */
  flex-grow: 0;
  flex-shrink: 0;
  display: flex;
  flex-direction: column;
  /* used as drag indicator */
  /**
     * These properties are defined but more specific properties are used
     */
}
mtk-cps-panel > .draghandle {
  cursor: ns-resize;
}
mtk-cps-panel indicator {
  display: block;
  max-width: 250px;
  position: relative;
  outline: 1px solid grey;
  z-index: 10;
}
mtk-cps-panel mtk-cps-collection.root,
mtk-cps-panel .mtl-cps-style-dict-container {
  display: block;
  flex-grow: 1;
  flex-shrink: 1;
  overflow-y: scroll;
}
mtk-cps-panel mtk-cps-style {
  display: block;
  background: red;
}
mtk-cps-panel mtk-cps-rule {
  display: block;
}
mtk-cps-panel mtk-cps-property-dict::before {
  content: '{';
  vertical-align: bottom;
}
mtk-cps-panel mtk-cps-property-dict::after {
  content: '}';
  display: block;
}
mtk-cps-panel mtk-cps-new-selector-list > div {
  display: inline-block;
  text-align: center;
}
mtk-cps-panel mtk-cps-new-rule mtk-cps-new-selector-list::after {
  content: '{}';
}
mtk-cps-panel mtk-cps-property-dict {
  display: inline;
}
mtk-cps-panel mtk-cps-property-dict ol {
  /*important, that we can detect double clicks when the list is
             empty. Double click is used to add a new-property interface.
             */
  min-height: .5em;
  display: block;
  list-style: none;
  padding: 0;
  margin: 0;
  font-family: monospace;
  font-size: .9em;
}
mtk-cps-panel mtk-cps-property-dict ol li {
  padding-left: 1em;
}
mtk-cps-panel mtk-cps-comment {
  display: inline-block;
  color: darkslategray;
  vertical-align: top;
}
mtk-cps-panel mtk-cps-comment span {
  display: inline-block;
}
mtk-cps-panel mtk-cps-comment span.format-standard {
  white-space: pre;
  font-family: monospace;
}
mtk-cps-panel mtk-cps-comment span.format-standard::before {
  content: '/*';
}
mtk-cps-panel mtk-cps-comment span.format-standard::after {
  content: '*/';
}
mtk-cps-panel mtk-cps-comment span.format-markdown {
  font-family: sans-serif;
}
mtk-cps-panel mtk-cps-property,
mtk-cps-panel mtk-cps-new-property,
mtk-cps-panel mtk-cps-selector-list,
mtk-cps-panel mtk-cps-comment,
mtk-cps-panel mtk-cps-import-collection,
mtk-cps-panel mtk-cps-new-item {
  line-height: 1.2em;
  /* this is also hardcoded in the template of the textarea! */
  display: inline-block;
  border-bottom: 2px solid transparent;
}
mtk-cps-panel mtk-cps-property .input,
mtk-cps-panel mtk-cps-new-property .input,
mtk-cps-panel mtk-cps-selector-list .input,
mtk-cps-panel mtk-cps-comment .input,
mtk-cps-panel mtk-cps-import-collection .input,
mtk-cps-panel mtk-cps-new-item .input,
mtk-cps-panel mtk-cps-property .display,
mtk-cps-panel mtk-cps-new-property .display,
mtk-cps-panel mtk-cps-selector-list .display,
mtk-cps-panel mtk-cps-comment .display,
mtk-cps-panel mtk-cps-import-collection .display,
mtk-cps-panel mtk-cps-new-item .display {
  vertical-align: top;
  border: none;
  padding: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}
mtk-cps-panel mtk-cps-property .display,
mtk-cps-panel mtk-cps-new-property .display,
mtk-cps-panel mtk-cps-selector-list .display,
mtk-cps-panel mtk-cps-comment .display,
mtk-cps-panel mtk-cps-import-collection .display,
mtk-cps-panel mtk-cps-new-item .display {
  background: white;
}
mtk-cps-panel mtk-cps-property .input,
mtk-cps-panel mtk-cps-new-property .input,
mtk-cps-panel mtk-cps-selector-list .input,
mtk-cps-panel mtk-cps-comment .input,
mtk-cps-panel mtk-cps-import-collection .input,
mtk-cps-panel mtk-cps-new-item .input {
  background: lightyellow;
  resize: none;
}
mtk-cps-panel mtk-cps-property .property-name,
mtk-cps-panel mtk-cps-new-property .property-name,
mtk-cps-panel mtk-cps-selector-list .property-name,
mtk-cps-panel mtk-cps-comment .property-name,
mtk-cps-panel mtk-cps-import-collection .property-name,
mtk-cps-panel mtk-cps-new-item .property-name {
  color: midnightblue;
}
mtk-cps-panel mtk-cps-property .property-value,
mtk-cps-panel mtk-cps-new-property .property-value,
mtk-cps-panel mtk-cps-selector-list .property-value,
mtk-cps-panel mtk-cps-comment .property-value,
mtk-cps-panel mtk-cps-import-collection .property-value,
mtk-cps-panel mtk-cps-new-item .property-value {
  color: darkgreen;
}
mtk-cps-panel mtk-cps-property .selectorlist,
mtk-cps-panel mtk-cps-new-property .selectorlist,
mtk-cps-panel mtk-cps-selector-list .selectorlist,
mtk-cps-panel mtk-cps-comment .selectorlist,
mtk-cps-panel mtk-cps-import-collection .selectorlist,
mtk-cps-panel mtk-cps-new-item .selectorlist {
  color: maroon;
}
mtk-cps-panel mtk-cps-property .display.selectorlist,
mtk-cps-panel mtk-cps-new-property .display.selectorlist,
mtk-cps-panel mtk-cps-selector-list .display.selectorlist,
mtk-cps-panel mtk-cps-comment .display.selectorlist,
mtk-cps-panel mtk-cps-import-collection .display.selectorlist,
mtk-cps-panel mtk-cps-new-item .display.selectorlist {
  min-width: 3em;
  /* need space to click for a new selectorlist */
}
mtk-cps-panel mtk-cps-property .display.property-value,
mtk-cps-panel mtk-cps-new-property .display.property-value,
mtk-cps-panel mtk-cps-selector-list .display.property-value,
mtk-cps-panel mtk-cps-comment .display.property-value,
mtk-cps-panel mtk-cps-import-collection .display.property-value,
mtk-cps-panel mtk-cps-new-item .display.property-value,
mtk-cps-panel mtk-cps-property .display.selectorlist,
mtk-cps-panel mtk-cps-new-property .display.selectorlist,
mtk-cps-panel mtk-cps-selector-list .display.selectorlist,
mtk-cps-panel mtk-cps-comment .display.selectorlist,
mtk-cps-panel mtk-cps-import-collection .display.selectorlist,
mtk-cps-panel mtk-cps-new-item .display.selectorlist {
  display: inline-block;
  white-space: pre;
}
mtk-cps-panel mtk-cps-property > div,
mtk-cps-panel mtk-cps-new-property > div,
mtk-cps-panel mtk-cps-selector-list > div,
mtk-cps-panel mtk-cps-comment > div,
mtk-cps-panel mtk-cps-import-collection > div,
mtk-cps-panel mtk-cps-new-item > div {
  display: inline-block;
  position: relative;
}
mtk-cps-panel mtk-cps-property .invalid:after,
mtk-cps-panel mtk-cps-new-property .invalid:after,
mtk-cps-panel mtk-cps-selector-list .invalid:after,
mtk-cps-panel mtk-cps-comment .invalid:after,
mtk-cps-panel mtk-cps-import-collection .invalid:after,
mtk-cps-panel mtk-cps-new-item .invalid:after {
  content: "\26A0  invalid property \26A0";
  font-family: sans-serif;
  color: red;
  white-space: nowrap;
  cursor: help;
}
mtk-cps-panel mtk-cps-property.shadowed span.property-name,
mtk-cps-panel mtk-cps-property.shadowed span.property-value {
  color: gray;
  text-decoration: line-through;
}
mtk-cps-panel mtk-cps-new-item {
  display: block;
}
mtk-cps-panel *.dragging {
  background: white;
  opacity: .5;
}
mtk-cps-panel *.dragging mtk-cps-toolbutton {
  display: none;
}
mtk-cps-panel mtk-cps-toolbar {
  position: relative;
}
mtk-cps-panel mtk-cps-toolbar > * {
  position: absolute;
  top: 0;
  left: 0;
  white-space: nowrap;
}
mtk-cps-panel mtk-cps-collection-li {
  background-color: rgba(100, 155, 50, 0.05);
  display: block;
  padding-left: 1em;
}
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-selector-list::before,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-selector-list::before,
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-new-selector-list::before,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-new-selector-list::before {
  content: "@namespace (";
}
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-selector-list,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-selector-list,
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-new-selector-list,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-new-selector-list {
  /*eliminates a pesky space between the element and the ::after*/
  display: inline-flex;
}
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-selector-list::after,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-selector-list::after,
mtk-cps-panel mtk-cps-namespace-collection > mtk-cps-new-selector-list::after,
mtk-cps-panel mtk-cps-new-namespace-collection > mtk-cps-new-selector-list::after {
  content: ") {";
}
mtk-cps-panel mtk-cps-namespace-collection::after,
mtk-cps-panel mtk-cps-new-namespace-collection::after {
  content: "}";
}
mtk-cps-panel mtk-cps-namespace-collection::after {
  display: block;
}
mtk-cps-panel mtk-drag-handle,
mtk-cps-panel mtk-cps-toolbutton {
  display: inline-block;
  padding: 0;
  margin-right: .2em;
  border: none;
  background: none;
  overflow: hidden;
  width: 1em;
  height: 1.2em;
  vertical-align: top;
  color: #ccc;
  cursor: default;
  font-family: sans-serif;
}
mtk-cps-panel mtk-drag-handle::before,
mtk-cps-panel mtk-cps-toolbutton::before {
  display: block;
  width: 100%;
  height: 100%;
  overflow: visible;
}
mtk-cps-panel mtk-drag-handle:hover,
mtk-cps-panel mtk-cps-toolbutton:hover {
  color: #000;
}
mtk-cps-panel mtk-drag-handle::before {
  content: "\2B0D";
}
mtk-cps-panel mtk-drag-handle {
  cursor: grab;
}
mtk-cps-panel .tool-delete:hover,
mtk-cps-panel .tool-cancel:hover {
  color: #f00;
}
mtk-cps-panel .tool-cancel::before,
mtk-cps-panel .tool-delete::before {
  content: "\2717";
}
