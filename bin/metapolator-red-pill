#!/bin/sh
__hash_bang_trick=/* exec /usr/bin/env node --harmony "$0" "$@"  # -*- mode: javascript; -*- */undefined

"use strict";

exports.command = {
    description: 'Open a UFO (default: current directory) in the red-pill web interface'
  , arguments: '[ufo]'
};

var path = require('path');
var requirejs = require('requirejs');
var express = require('express');
require('rootpath')();
requirejs.config(require('config'));

if (require.main === module) {
    requirejs([
        'commander'
      , 'metapolator/parseArgs'
      , 'ufojs/tools/io/staticNodeJS'
      , 'restfs'
    ], function (
        program
      , parseArgs
      , io
      , restfs
    ) {
        program._name = path.basename(process.argv[1], '.js').replace('-', ' ');
        program.arguments(exports.command.arguments)
        .description(exports.command.description)
        .action(function(projectDir) {
            // expect require.main.filename to be path/to/metapolator-code/bin/<command>
            // thus path/to/metapolator-code is the root directory
            var rootDir = path.dirname(path.dirname(require.main.filename))
              , libDir = rootDir + '/app/lib'
              , index = rootDir + '/app/red-pill.html'
              , project = parseArgs.project(io, projectDir)
              ;

            var app = express()
            .get('/', function(req, res, next) { res.sendfile(index); }) // index file
            .use('/lib', express.static(libDir)) // application code
            .use('/project', restfs(project.baseDir)); // the project, as a RESTful directory

            if (program.port === undefined)
                program.port = parseInt(process.env.RED_PILL_PORT);
            var server = app.listen(program.port || 0);
            if (server.address()) {
                console.warn('Metapolator: Serving the red pill.');
                console.warn('Open http://localhost:'+server.address().port+' in your browser.');
                console.warn('If you are using Chromium (or Chrome), you should run it as: chromium --js-flags="--harmony_proxies"');
            }
        })
        .option('-p, --port <n>', 'The port to listen on (default: environment variable RED_PILL_PORT (if unset, random))', parseInt);
        program.parse(process.argv);
    }
)}
